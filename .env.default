## 服务器IP, 网关等服务不设置IP的时候,默认会读取这个
# 必填，当前服务器外网IP
SERVER_IP_PUBLIC='' # 127.0.0.1
# 必填, 当前服务器内网IP
SERVER_IP_INTERNAL='' # 127.0.0.1
# 服务器域名
SERVER_HOSTNAME='' # livedvr.tripsdd.com
SSL_CERTIFICATE='' # /home/docker-compose/ssl/livedvr_tripsdd_com

# bus和track部署在同一台服务器上时, 需要通过域名区分两者
BUS_HOSTNAME=${SERVER_HOSTNAME}
BUS_SSL_CERTIFICATE=${SSL_CERTIFICATE}
TRACK_HOSTNAME=${SERVER_HOSTNAME}
TRACK_SSL_CERTIFICATE=${SSL_CERTIFICATE}

#---------------------------------------------
# 前端配置
WEB_PORT_HTTP=80
WEB_PORT_HTTPS=443
WEB_BASE_URL=https://${SERVER_HOSTNAME} # https://livedvr.tripsdd.com
#---------------------------------------------

## 视频服务器
#  必填, 视频外网IP, APP客户端和设备连接
VIDEO_IP=${SERVER_IP_PUBLIC}
# 必填
VIDEO_HOSTNAME=${SERVER_HOSTNAME} # livedvr.tripsdd.com
# 必填, 证书文件的绝对路径, 排除.crt/.key后缀, nginx使用的是 $VIDEO_SSL_CERTIFICATE.crt 和 $VIDEO_SSL_CERTIFICATE.key 两个文件
VIDEO_SSL_CERTIFICATE=${SSL_CERTIFICATE} # /home/docker/video-nginx/ssl/livedvr_tripsdd_com

# 终端-实时直播端口
VIDEO_PORT_LIVE=9000
# 终端-录像回放端口
VIDEO_PORT_RECORD=9001
# 终端-对讲
VIDEO_PORT_TALK=9002
# 终端-终端监听
VIDEO_PORT_MONITOR=9003
# rtmp端口(rtp和app使用)
VIDEO_PORT_RTMP=9005

# 前端和App对讲&flv的https端口，目前使用5个端口, 大于支持30个通道
# 增加端口需要修改nginx的config和docker-compose.yml以及rtp服务映射
VIDEO_PORT_HTTPS_0=9084 # 推荐443或者9084
VIDEO_PORT_HTTPS_1=9085
VIDEO_PORT_HTTPS_2=9086
VIDEO_PORT_HTTPS_3=9087
VIDEO_PORT_HTTPS_4=9088
VIDEO_PORT_HTTPS_5=9089

#---------------------------------------------

## 网关服务器

# 必填, 后端和流媒体服务往网关服务器注册或者下发指令
# 单机部署推荐别名jtt808，内网多服务器部署推荐内网IP, 外网部署使用外网IP
JTT808_HOST='jtt808' # jtt808 | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}

## 808网关
JTT808_IP=${SERVER_IP_PUBLIC} # 默认使用服务器外网IP,设备使用
JTT808_PORT=9011
JTT808_PORT_HTTP=9012
JTT808_PORT_FILE=9013
JTT808_PORT_FTP=9021
JTT808_PORT_FTP_ACTIVE=9022
JTT808_PORT_FTP_PASSIVE=9041-9049

#---------------------------------------------

## maintain
MAINTAIN_HOST='maintain' # maintain | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
MAINTAIN_PORT='8080'
# TOKEN目录的绝对路径, 包含以下文件, 最新版服务器已经支持自动生成这些文件:
# - access/ras_key|ras_key.pub: 访问密钥的公私钥对
# - refresh/ras_key|ras_key.pub: 刷新密钥的公私钥对
# - ip2region.xdb: ip到区域的映射数据, 下载连接: https://raw.githubusercontent.com/lionsoul2014/ip2region/master/data/ip2region.xdb
MAINTAIN_TOKEN_DIR='/home/docker-compose/token'

## MYSQL, 必填
MYSQL_HOST='mysql8' # mysql8 | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
MYSQL_PORT=3306
MYSQL_USERNAME='root' #xxxxxxxx
MYSQL_PASSWORD='' #xxxxxxxx

## REDIS, 必填
REDIS_HOST='redis' # redis | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
REDIS_PORT=6379
REDIS_PASSWORD='' #xxxxxxxx

## MongoDB, jtt808必填
MONGODB_HOST='mongodb' # mongodb | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
MONGODB_PORT=27017
MONGODB_PORT_HTTP=15672
MONGODB_USERNAME='root' # MONGODB
MONGODB_PASSWORD='' # MONGODB

## Rabbitmq, Rtp存储模式必填
RABBITMQ_HOST='rabbitmq' # rabbitmq | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
RABBITMQ_PORT=5672
RABBITMQ_USERNAME='admin' # admin
RABBITMQ_PASSWORD='' # 123

## Minio, Rtp存储模式必填, 规避RTP-9000端口冲突
MINIO_HOST='minio' # minio | ${SERVER_IP_INTERNAL} | ${SERVER_IP_PUBLIC}
MINIO_PORT=8000
MINIO_PORT_HTTP=8001
MINIO_USER=minioadmin
MINIO_PASSWORD='' # xxxxxxxxxxxxxxxx
# MINIO_ACCESSKEY/SECRETKEY, 默认使用帐号&密码, 也可以在minio的管理后台创建一组新的KEY
MINIO_ACCESSKEY=${MINIO_USER} # xxxxxxxxxxxxxxxx
MINIO_SECRETKEY=${MINIO_PASSWORD} # xxxxxxxxxxxxxxxxx

#---------------------------------------------

## 邮件
MAIL_HOST=smtp.transcodegroup.com
MAIL_USERNAME=bus@transcodegroup.com
# 需要去企业邮箱中创建密码
MAIL_PASSWORD='' #xxxxxxxxxxxxxxxx
